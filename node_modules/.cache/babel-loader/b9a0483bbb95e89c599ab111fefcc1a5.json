{"ast":null,"code":"import React, { useState, useReducer, useRef, useMemo, useCallback, useEffect, useContext, useLayoutEffect } from 'react';\nimport { Howl } from 'howler';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar Actions;\n\n(function (Actions) {\n  Actions[Actions[\"START_LOAD\"] = 0] = \"START_LOAD\";\n  Actions[Actions[\"ON_LOAD\"] = 1] = \"ON_LOAD\";\n  Actions[Actions[\"ON_PLAY\"] = 2] = \"ON_PLAY\";\n  Actions[Actions[\"ON_END\"] = 3] = \"ON_END\";\n  Actions[Actions[\"ON_PAUSE\"] = 4] = \"ON_PAUSE\";\n  Actions[Actions[\"ON_STOP\"] = 5] = \"ON_STOP\";\n  Actions[Actions[\"ON_PLAY_ERROR\"] = 6] = \"ON_PLAY_ERROR\";\n  Actions[Actions[\"ON_LOAD_ERROR\"] = 7] = \"ON_LOAD_ERROR\";\n})(Actions || (Actions = {}));\n\nvar initialState = {\n  loading: true,\n  playing: false,\n  stopped: true,\n  ended: false,\n  error: null,\n  duration: 0,\n  ready: false\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case Actions.START_LOAD:\n      return _extends({}, state, {\n        loading: true,\n        stopped: true,\n        ready: false,\n        error: null,\n        duration: 0\n      });\n\n    case Actions.ON_LOAD:\n      return _extends({}, state, {\n        loading: false,\n        duration: action.duration,\n        ended: false,\n        ready: true\n      });\n\n    case Actions.ON_PLAY:\n      return _extends({}, state, {\n        playing: true,\n        ended: false,\n        stopped: false\n      });\n\n    case Actions.ON_STOP:\n      return _extends({}, state, {\n        stopped: true,\n        playing: false\n      });\n\n    case Actions.ON_END:\n      return _extends({}, state, {\n        stopped: true,\n        playing: false,\n        ended: true\n      });\n\n    case Actions.ON_PAUSE:\n      return _extends({}, state, {\n        playing: false\n      });\n\n    case Actions.ON_PLAY_ERROR:\n      return _extends({}, state, {\n        playing: false,\n        stopped: true,\n        error: action.error\n      });\n\n    case Actions.ON_LOAD_ERROR:\n      return _extends({}, state, {\n        playing: false,\n        stopped: true,\n        loading: false,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar playerContext = /*#__PURE__*/React.createContext(null);\nvar positionContext = /*#__PURE__*/React.createContext({\n  position: 0,\n  setPosition: function setPosition() {}\n});\n\nfunction AudioPlayerProvider(_ref) {\n  var children = _ref.children,\n      value = _ref.value;\n\n  var _useState = useState(null),\n      player = _useState[0],\n      setPlayer = _useState[1];\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer$ = _useReducer[0],\n      loading = _useReducer$.loading,\n      error = _useReducer$.error,\n      playing = _useReducer$.playing,\n      stopped = _useReducer$.stopped,\n      duration = _useReducer$.duration,\n      ready = _useReducer$.ready,\n      ended = _useReducer$.ended,\n      dispatch = _useReducer[1];\n\n  var playerRef = useRef();\n  var prevPlayer = useRef();\n\n  var _useState2 = useState(0),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  var positionContextValue = useMemo(function () {\n    return {\n      position: position,\n      setPosition: setPosition\n    };\n  }, [position, setPosition]);\n  var constructHowl = useCallback(function (audioProps) {\n    return new Howl(audioProps);\n  }, []);\n  var load = useCallback(function (_ref2) {\n    var src = _ref2.src,\n        _ref2$autoplay = _ref2.autoplay,\n        autoplay = _ref2$autoplay === void 0 ? false : _ref2$autoplay,\n        _ref2$html = _ref2.html5,\n        html5 = _ref2$html === void 0 ? false : _ref2$html,\n        rest = _objectWithoutPropertiesLoose(_ref2, [\"src\", \"autoplay\", \"html5\"]);\n\n    var wasPlaying = false;\n\n    if (playerRef.current) {\n      // don't do anything if we're asked to reload the same source\n      // @ts-ignore the _src argument actually exists\n      var _src = playerRef.current._src; // internal Howl _src property is sometimes an array and other times a single string\n      // still need to to do more research on why this is\n\n      var prevSrc = Array.isArray(_src) ? _src[0] : _src;\n      if (prevSrc === src) return; // if the previous sound is still loading then destroy it as soon as it finishes\n\n      if (loading) {\n        prevPlayer.current = playerRef.current;\n        prevPlayer.current.once(\"load\", function () {\n          var _prevPlayer$current;\n\n          (_prevPlayer$current = prevPlayer.current) === null || _prevPlayer$current === void 0 ? void 0 : _prevPlayer$current.unload();\n        });\n      }\n\n      wasPlaying = playerRef.current.playing();\n\n      if (wasPlaying) {\n        playerRef.current.stop(); // remove event handlers from player that is about to be replaced\n\n        playerRef.current.off();\n        playerRef.current = undefined;\n      }\n    } // signal that the loading process has begun\n\n\n    dispatch({\n      type: Actions.START_LOAD\n    }); // create a new player\n\n    var howl = constructHowl(_extends({\n      src: src,\n      autoplay: wasPlaying || autoplay,\n      html5: html5\n    }, rest)); // if this howl has already been loaded (cached) then fire the load action\n    // @ts-ignore _state exists\n\n    if (howl._state === \"loaded\") {\n      dispatch({\n        type: Actions.ON_LOAD,\n        duration: howl.duration()\n      });\n    }\n\n    howl.on(\"load\", function () {\n      return void dispatch({\n        type: Actions.ON_LOAD,\n        duration: howl.duration()\n      });\n    });\n    howl.on(\"play\", function () {\n      return void dispatch({\n        type: Actions.ON_PLAY\n      });\n    });\n    howl.on(\"end\", function () {\n      return void dispatch({\n        type: Actions.ON_END\n      });\n    });\n    howl.on(\"pause\", function () {\n      return void dispatch({\n        type: Actions.ON_PAUSE\n      });\n    });\n    howl.on(\"stop\", function () {\n      return void dispatch({\n        type: Actions.ON_STOP\n      });\n    });\n    howl.on(\"playerror\", function (_id, error) {\n      dispatch({\n        type: Actions.ON_PLAY_ERROR,\n        error: new Error(\"[Play error] \" + error)\n      });\n    });\n    howl.on(\"loaderror\", function (_id, error) {\n      dispatch({\n        type: Actions.ON_LOAD_ERROR,\n        error: new Error(\"[Load error] \" + error)\n      });\n    });\n    setPlayer(howl);\n    playerRef.current = howl;\n  }, [constructHowl, loading]);\n  useEffect(function () {\n    // unload the player on unmount\n    return function () {\n      if (playerRef.current) playerRef.current.unload();\n    };\n  }, []);\n  var contextValue = useMemo(function () {\n    return value ? value : {\n      player: player,\n      load: load,\n      error: error,\n      loading: loading,\n      playing: playing,\n      stopped: stopped,\n      ready: ready,\n      duration: duration,\n      ended: ended\n    };\n  }, [loading, error, playing, stopped, load, value, player, ready, duration, ended]);\n  return React.createElement(playerContext.Provider, {\n    value: contextValue\n  }, React.createElement(positionContext.Provider, {\n    value: positionContextValue\n  }, children));\n}\n\nvar noop = function noop() {};\n\nvar useAudioPlayer = function useAudioPlayer(options) {\n  var _useContext = useContext(playerContext),\n      player = _useContext.player,\n      load = _useContext.load,\n      rest = _objectWithoutPropertiesLoose(_useContext, [\"player\", \"load\"]);\n\n  useEffect(function () {\n    var _ref = options || {},\n        src = _ref.src,\n        restOptions = _objectWithoutPropertiesLoose(_ref, [\"src\"]); // if useAudioPlayer is called without arguments\n    // don't do anything: the user will have access\n    // to the current context\n\n\n    if (!src) return; // todo: could improve perf even more by not calling load if the options haven't really changed across renders of the calling component\n\n    load(_extends({\n      src: src\n    }, restOptions));\n  }, [options, load]);\n  var togglePlayPause = useCallback(function () {\n    if (!player) return;\n\n    if (player.playing()) {\n      player.pause();\n    } else {\n      player.play();\n    }\n  }, [player]);\n  var boundHowlerMethods = useMemo(function () {\n    return {\n      play: player ? player.play.bind(player) : noop,\n      pause: player ? player.pause.bind(player) : noop,\n      stop: player ? player.stop.bind(player) : noop,\n      mute: player ? player.mute.bind(player) : noop,\n      volume: player ? player.volume.bind(player) : noop,\n      fade: player ? player.fade.bind(player) : noop\n    };\n  }, [player]);\n  return useMemo(function () {\n    return _extends({}, rest, boundHowlerMethods, {\n      player: player,\n      load: load,\n      togglePlayPause: togglePlayPause\n    });\n  }, [rest, player, boundHowlerMethods, load, togglePlayPause]);\n};\n/**\r\n * Abstraction for useLayoutEffect.\r\n *\r\n * It will use useLayoutEffect() on the client, but while rendering on the server it will use\r\n * useEffect() to avoid ssr servers warnings like \"useLayoutEffect does nothing on the server\".\r\n */\n\n\nvar useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\nvar useAudioPosition = function useAudioPosition(config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _config = config,\n      _config$highRefreshRa = _config.highRefreshRate,\n      highRefreshRate = _config$highRefreshRa === void 0 ? false : _config$highRefreshRa;\n\n  var _useContext = useContext(playerContext),\n      player = _useContext.player,\n      playing = _useContext.playing,\n      stopped = _useContext.stopped,\n      duration = _useContext.duration;\n\n  var _useContext2 = useContext(positionContext),\n      position = _useContext2.position,\n      setPosition = _useContext2.setPosition;\n\n  var animationFrameRef = useRef(); // sets position on player initialization and when the audio is stopped\n\n  useEffect(function () {\n    if (player) {\n      setPosition(player.seek());\n    }\n  }, [player, setPosition, stopped]); // updates position on a one second loop for low refresh rate default setting\n\n  useEffect(function () {\n    var timeout;\n    if (!highRefreshRate && player && playing) timeout = window.setInterval(function () {\n      return setPosition(player.seek());\n    }, 1000);\n    return function () {\n      return clearTimeout(timeout);\n    };\n  }, [highRefreshRate, player, playing, setPosition]); // updates position on a 60fps loop for high refresh rate setting\n\n  useIsomorphicLayoutEffect(function () {\n    var animate = function animate() {\n      setPosition(player === null || player === void 0 ? void 0 : player.seek());\n      animationFrameRef.current = requestAnimationFrame(animate);\n    }; // kick off a new animation cycle when the player is defined and starts playing\n\n\n    if (highRefreshRate && player && playing) {\n      animationFrameRef.current = requestAnimationFrame(animate);\n    }\n\n    return function () {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [highRefreshRate, player, playing, setPosition]);\n  var seek = useCallback(function (position) {\n    if (!player) return 0; // it appears that howler returns the Howl object when seek is given a position\n    // to get the latest potion you must call seek again with no parameters\n\n    var result = player.seek(position);\n    var updatedPos = result.seek();\n    setPosition(updatedPos);\n    return updatedPos;\n  }, [player, setPosition]);\n  var percentComplete = useMemo(function () {\n    return position / duration * 100 || 0;\n  }, [duration, position]);\n  return {\n    position: position,\n    duration: duration,\n    seek: seek,\n    percentComplete: percentComplete\n  };\n};\n\nexport { AudioPlayerProvider, useAudioPlayer, useAudioPosition };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAYA,OAAZ;;AAAA,WAAYA,OAAZ,EAAYA;AACRA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AARJ,GAAYA,OAAO,KAAPA,OAAO,MAAnB;;AAmCO,IAAMC,YAAY,GAAqB;AAC1CC,SAAO,EAAE,IADiC;AAE1CC,SAAO,EAAE,KAFiC;AAG1CC,SAAO,EAAE,IAHiC;AAI1CC,OAAK,EAAE,KAJmC;AAK1CC,OAAK,EAAE,IALmC;AAM1CC,UAAQ,EAAE,CANgC;AAO1CC,OAAK,EAAE;AAPmC,CAAvC;;SAUSC,QAAQC,OAAyBC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,OAAO,CAACa,UAAb;AACI,0BACOH,KADP;AAEIR,eAAO,EAAE,IAFb;AAGIE,eAAO,EAAE,IAHb;AAIII,aAAK,EAAE,KAJX;AAKIF,aAAK,EAAE,IALX;AAMIC,gBAAQ,EAAE;AANd;;AAQJ,SAAKP,OAAO,CAACc,OAAb;AACI,0BACOJ,KADP;AAEIR,eAAO,EAAE,KAFb;AAGIK,gBAAQ,EAAGI,MAAqB,CAACJ,QAHrC;AAIIF,aAAK,EAAE,KAJX;AAKIG,aAAK,EAAE;AALX;;AAOJ,SAAKR,OAAO,CAACe,OAAb;AACI,0BACOL,KADP;AAEIP,eAAO,EAAE,IAFb;AAGIE,aAAK,EAAE,KAHX;AAIID,eAAO,EAAE;AAJb;;AAMJ,SAAKJ,OAAO,CAACgB,OAAb;AACI,0BACON,KADP;AAEIN,eAAO,EAAE,IAFb;AAGID,eAAO,EAAE;AAHb;;AAKJ,SAAKH,OAAO,CAACiB,MAAb;AACI,0BACOP,KADP;AAEIN,eAAO,EAAE,IAFb;AAGID,eAAO,EAAE,KAHb;AAIIE,aAAK,EAAE;AAJX;;AAMJ,SAAKL,OAAO,CAACkB,QAAb;AACI,0BACOR,KADP;AAEIP,eAAO,EAAE;AAFb;;AAIJ,SAAKH,OAAO,CAACmB,aAAb;AACI,0BACOT,KADP;AAEIP,eAAO,EAAE,KAFb;AAGIC,eAAO,EAAE,IAHb;AAIIE,aAAK,EAAGK,MAAsB,CAACL;AAJnC;;AAMJ,SAAKN,OAAO,CAACoB,aAAb;AACI,0BACOV,KADP;AAEIP,eAAO,EAAE,KAFb;AAGIC,eAAO,EAAE,IAHb;AAIIF,eAAO,EAAE,KAJb;AAKII,aAAK,EAAGK,MAAsB,CAACL;AALnC;;AAOJ;AACI,aAAOI,KAAP;AA3DR;AA6DH;;ACxGM,IAAMW,aAAa,gBAAGC,KAAK,CAACC,aAAND,CACzB,IADyBA,CAAtB;AAIA,IAAME,eAAe,gBAAGF,KAAK,CAACC,aAAND,CAAgD;AAC3EG,UAAQ,EAAE,CADiE;AAE3EC,aAAW,EAAE;AAF8D,CAAhDJ,CAA/B;;SCWgBK;MACZC;MACAC;;kBAE4BC,QAAQ,CAAc,IAAd;MAA7BC;MAAQC;;oBAIXC,UAAU,CAACxB,OAAD,EAAUR,YAAV;;MAFRC;MAASI;MAAOH;MAASC;MAASG;MAAUC;MAAOH;MACrD6B;;AAGJ,MAAMC,SAAS,GAAGC,MAAM,EAAxB;AACA,MAAMC,UAAU,GAAGD,MAAM,EAAzB;;mBAEgCN,QAAQ,CAAC,CAAD;MAAjCL;MAAUC;;AACjB,MAAMY,oBAAoB,GAAGC,OAAO,CAChC;AAAA,WAAO;AACHd,cAAQ,EAARA,QADG;AAEHC,iBAAW,EAAXA;AAFG,KAAP;AADgC,KAKhC,CAACD,QAAD,EAAWC,WAAX,CALgC,CAApC;AAQA,MAAMc,aAAa,GAAGC,WAAW,CAAC,UAACC,UAAD;AAC9B,WAAO,IAAIC,IAAJ,CAASD,UAAT,CAAP;AAD6B,KAE9B,EAF8B,CAAjC;AAIA,MAAME,IAAI,GAAGH,WAAW,CACpB;QAAGI;+BAAKC;QAAAA,uCAAW,KAAXA,GAAWC;2BAAOC;QAAAA,gCAAQ,KAARA,GAAQC;QAAUC;;AACxC,QAAIC,UAAU,GAAG,KAAjB;;AACA,QAAIhB,SAAS,CAACiB,OAAd,EAAuB;AACnB;AACA;AAFmB,UAGXC,IAHW,GAGFlB,SAAS,CAACiB,OAAVjB,CAATkB,IAHW;AAKnB;;AACA,UAAMC,OAAO,GAAGC,KAAK,CAACC,OAAND,CAAcF,IAAdE,IAAsBF,IAAI,CAAC,CAAD,CAA1BE,GAAgCF,IAAhD;AACA,UAAIC,OAAO,KAAKT,GAAhB,EAAqB,OAPF;;AAUnB,UAAI3C,OAAJ,EAAa;AACTmC,kBAAU,CAACe,OAAXf,GAAqBF,SAAS,CAACiB,OAA/Bf;AACAA,kBAAU,CAACe,OAAXf,CAAmBoB,IAAnBpB,CAAwB,MAAxBA,EAAgC;;;AAC5B,2CAAU,CAACe,OAAX,4EAAoBM,MAApB;AADJ;AAGH;;AAEDP,gBAAU,GAAGhB,SAAS,CAACiB,OAAVjB,CAAkBhC,OAAlBgC,EAAbgB;;AACA,UAAIA,UAAJ,EAAgB;AACZhB,iBAAS,CAACiB,OAAVjB,CAAkBwB,IAAlBxB,GADY;;AAGZA,iBAAS,CAACiB,OAAVjB,CAAkByB,GAAlBzB;AACAA,iBAAS,CAACiB,OAAVjB,GAAoB0B,SAApB1B;AACH;AACJ,KA1BL,CA0BK;;;AAGDD,YAAQ,CAAC;AAAEtB,UAAI,EAAEZ,OAAO,CAACa;AAAhB,KAAD,CAARqB,CA7BJ,CA6BI;;AAGA,QAAM4B,IAAI,GAAGtB,aAAa;AACtBK,SAAG,EAAHA,GADsB;AAEtBC,cAAQ,EAAEK,UAAU,IAAIL,QAFF;AAGtBE,WAAK,EAALA;AAHsB,OAInBE,IAJmB,EAA1B,CAhCJ,CAgCI;AAQA;;AACA,QAAIY,IAAI,CAACC,MAALD,KAAgB,QAApB,EAA8B;AAC1B5B,cAAQ,CAAC;AAAEtB,YAAI,EAAEZ,OAAO,CAACc,OAAhB;AAAyBP,gBAAQ,EAAEuD,IAAI,CAACvD,QAALuD;AAAnC,OAAD,CAAR5B;AACH;;AAED4B,QAAI,CAACE,EAALF,CACI,MADJA,EAEI;AAAA,aACI,KAAK5B,QAAQ,CAAC;AACVtB,YAAI,EAAEZ,OAAO,CAACc,OADJ;AAEVP,gBAAQ,EAAEuD,IAAI,CAACvD,QAALuD;AAFA,OAAD,CADjB;AAFJ;AAQAA,QAAI,CAACE,EAALF,CAAQ,MAARA,EAAgB;AAAA,aAAM,KAAK5B,QAAQ,CAAC;AAAEtB,YAAI,EAAEZ,OAAO,CAACe;AAAhB,OAAD,CAAnB;AAAhB;AACA+C,QAAI,CAACE,EAALF,CAAQ,KAARA,EAAe;AAAA,aAAM,KAAK5B,QAAQ,CAAC;AAAEtB,YAAI,EAAEZ,OAAO,CAACiB;AAAhB,OAAD,CAAnB;AAAf;AACA6C,QAAI,CAACE,EAALF,CAAQ,OAARA,EAAiB;AAAA,aAAM,KAAK5B,QAAQ,CAAC;AAAEtB,YAAI,EAAEZ,OAAO,CAACkB;AAAhB,OAAD,CAAnB;AAAjB;AACA4C,QAAI,CAACE,EAALF,CAAQ,MAARA,EAAgB;AAAA,aAAM,KAAK5B,QAAQ,CAAC;AAAEtB,YAAI,EAAEZ,OAAO,CAACgB;AAAhB,OAAD,CAAnB;AAAhB;AACA8C,QAAI,CAACE,EAALF,CAAQ,WAARA,EAAqB,UAACG,GAAD,EAAM3D,KAAN;AACjB4B,cAAQ,CAAC;AACLtB,YAAI,EAAEZ,OAAO,CAACmB,aADT;AAELb,aAAK,EAAE,IAAI4D,KAAJ,CAAU,kBAAkB5D,KAA5B;AAFF,OAAD,CAAR4B;AADJ;AAMA4B,QAAI,CAACE,EAALF,CAAQ,WAARA,EAAqB,UAACG,GAAD,EAAM3D,KAAN;AACjB4B,cAAQ,CAAC;AACLtB,YAAI,EAAEZ,OAAO,CAACoB,aADT;AAELd,aAAK,EAAE,IAAI4D,KAAJ,CAAU,kBAAkB5D,KAA5B;AAFF,OAAD,CAAR4B;AADJ;AAOAF,aAAS,CAAC8B,IAAD,CAAT9B;AACAG,aAAS,CAACiB,OAAVjB,GAAoB2B,IAApB3B;AAxEgB,KA0EpB,CAACK,aAAD,EAAgBtC,OAAhB,CA1EoB,CAAxB;AA6EAiE,WAAS,CAAC;AACN;AACA,WAAO;AACH,UAAIhC,SAAS,CAACiB,OAAd,EAAuBjB,SAAS,CAACiB,OAAVjB,CAAkBuB,MAAlBvB;AAD3B;AAFK,KAKN,EALM,CAATgC;AAOA,MAAMC,YAAY,GAAuB7B,OAAO,CAAC;AAC7C,WAAOV,KAAK,GACNA,KADM,GAEN;AACIE,YAAM,EAANA,MADJ;AAEIa,UAAI,EAAJA,IAFJ;AAGItC,WAAK,EAALA,KAHJ;AAIIJ,aAAO,EAAPA,OAJJ;AAKIC,aAAO,EAAPA,OALJ;AAMIC,aAAO,EAAPA,OANJ;AAOII,WAAK,EAALA,KAPJ;AAQID,cAAQ,EAARA,QARJ;AASIF,WAAK,EAALA;AATJ,KAFN;AAD4C,KAc7C,CACCH,OADD,EAECI,KAFD,EAGCH,OAHD,EAICC,OAJD,EAKCwC,IALD,EAMCf,KAND,EAOCE,MAPD,EAQCvB,KARD,EASCD,QATD,EAUCF,KAVD,CAd6C,CAAhD;AA2BA,SACIiB,oBAACD,aAAa,CAACgD,QAAf/C;AAAwBO,SAAK,EAAEuC;AAA/B,KACI9C,oBAACE,eAAe,CAAC6C,QAAjB/C;AAA0BO,SAAK,EAAES;AAAjC,KACKV,QADLN,CADJA,CADJ;AAOH;;AC7JD,IAAMgD,IAAI,GAAG,SAAPA,IAAO,IAAb;;AAYA,IAAaC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD;oBACQC,UAAU,CAACpD,aAAD;MAApCU;MAAQa;MAASM;;AAEzBiB,WAAS,CAAC;eAC0BK,OAAO,IAAI;QAAnC3B;QAAQ6B,2DADV,CACUA;AAEhB;AACA;;;AACA,QAAI,CAAC7B,GAAL,EAAU,OALJ,CAKI;;AAEVD,QAAI;AAAGC,SAAG,EAAHA;AAAH,OAAW6B,WAAX,EAAJ9B;AAPK,KAQN,CAAC4B,OAAD,EAAU5B,IAAV,CARM,CAATuB;AAUA,MAAMQ,eAAe,GAAGlC,WAAW,CAAC;AAChC,QAAI,CAACV,MAAL,EAAa;;AAEb,QAAIA,MAAM,CAAC5B,OAAP4B,EAAJ,EAAsB;AAClBA,YAAM,CAAC6C,KAAP7C;AADJ,WAEO;AACHA,YAAM,CAAC8C,IAAP9C;AACH;AAP8B,KAQhC,CAACA,MAAD,CARgC,CAAnC;AAUA,MAAM+C,kBAAkB,GAAGvC,OAAO,CAAC;AAC/B,WAAO;AACHsC,UAAI,EAAE9C,MAAM,GAAGA,MAAM,CAAC8C,IAAP9C,CAAYgD,IAAZhD,CAAiBA,MAAjBA,CAAH,GAA8BuC,IADvC;AAEHM,WAAK,EAAE7C,MAAM,GAAGA,MAAM,CAAC6C,KAAP7C,CAAagD,IAAbhD,CAAkBA,MAAlBA,CAAH,GAA+BuC,IAFzC;AAGHX,UAAI,EAAE5B,MAAM,GAAGA,MAAM,CAAC4B,IAAP5B,CAAYgD,IAAZhD,CAAiBA,MAAjBA,CAAH,GAA8BuC,IAHvC;AAIHU,UAAI,EAAEjD,MAAM,GAAGA,MAAM,CAACiD,IAAPjD,CAAYgD,IAAZhD,CAAiBA,MAAjBA,CAAH,GAA8BuC,IAJvC;AAKHW,YAAM,EAAElD,MAAM,GAAGA,MAAM,CAACkD,MAAPlD,CAAcgD,IAAdhD,CAAmBA,MAAnBA,CAAH,GAAgCuC,IAL3C;AAMHY,UAAI,EAAEnD,MAAM,GAAGA,MAAM,CAACmD,IAAPnD,CAAYgD,IAAZhD,CAAiBA,MAAjBA,CAAH,GAA8BuC;AANvC,KAAP;AAD8B,KAS/B,CAACvC,MAAD,CAT+B,CAAlC;AAWA,SAAOQ,OAAO,CAAC;AACX,wBACOW,IADP,EAEO4B,kBAFP;AAGI/C,YAAM,EAANA,MAHJ;AAIIa,UAAI,EAAJA,IAJJ;AAKI+B,qBAAe,EAAfA;AALJ;AADU,KAQX,CAACzB,IAAD,EAAOnB,MAAP,EAAe+C,kBAAf,EAAmClC,IAAnC,EAAyC+B,eAAzC,CARW,CAAd;AAlCG,CAAP;ACfA;;;;;;;;AAMA,IAAMQ,yBAAyB,GAC3B,OAAOC,MAAP,KAAkB,WAAlB,GAAgCC,eAAhC,GAAkDlB,SADtD;;ICSamB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC5BC,MAD4B;MAC5BA;AAAAA,aAAiC,EAAjCA;;;gBAEoCA;sCAA5BC;MAAAA,qDAAkB,KAAlBA,GAAkBC;;oBACqBhB,UAAU,CAACpD,aAAD;MAAjDU;MAAQ5B;MAASC;MAASG;;qBACAkE,UAAU,CAACjD,eAAD;MAApCC;MAAUC;;AAElB,MAAMgE,iBAAiB,GAAGtD,MAAM,EAAhC,CAP4B,CAO5B;;AAGA+B,WAAS,CAAC;AACN,QAAIpC,MAAJ,EAAY;AACRL,iBAAW,CAACK,MAAM,CAAC4D,IAAP5D,EAAD,CAAXL;AACH;AAHI,KAIN,CAACK,MAAD,EAASL,WAAT,EAAsBtB,OAAtB,CAJM,CAAT+D,CAV4B,CAU5B;;AAOAA,WAAS,CAAC;AACN,QAAIyB,OAAJ;AACA,QAAI,CAACJ,eAAD,IAAoBzD,MAApB,IAA8B5B,OAAlC,EACIyF,OAAO,GAAGR,MAAM,CAACS,WAAPT,CACN;AAAA,aAAM1D,WAAW,CAACK,MAAM,CAAC4D,IAAP5D,EAAD,CAAjB;AADM,OAEN,IAFMqD,CAAVQ;AAIJ,WAAO;AAAA,aAAME,YAAY,CAACF,OAAD,CAAlB;AAAP;AAPK,KAQN,CAACJ,eAAD,EAAkBzD,MAAlB,EAA0B5B,OAA1B,EAAmCuB,WAAnC,CARM,CAATyC,CAjB4B,CAiB5B;;AAWAgB,2BAAyB,CAAC;AACtB,QAAMY,OAAO,GAAG,SAAVA,OAAU;AACZrE,iBAAW,CAACK,MAAD,SAACA,UAAD,WAACA,GAAD,MAACA,SAAM,CAAE4D,IAAR5D,EAAD,CAAXL;AACAgE,uBAAiB,CAACtC,OAAlBsC,GAA4BM,qBAAqB,CAACD,OAAD,CAAjDL;AAFJ,MADsB,CACtB;;;AAMA,QAAIF,eAAe,IAAIzD,MAAnByD,IAA6BrF,OAAjC,EAA0C;AACtCuF,uBAAiB,CAACtC,OAAlBsC,GAA4BM,qBAAqB,CAACD,OAAD,CAAjDL;AACH;;AAED,WAAO;AACH,UAAIA,iBAAiB,CAACtC,OAAtB,EAA+B;AAC3B6C,4BAAoB,CAACP,iBAAiB,CAACtC,OAAnB,CAApB6C;AACH;AAHL;AAXqB,KAgBtB,CAACT,eAAD,EAAkBzD,MAAlB,EAA0B5B,OAA1B,EAAmCuB,WAAnC,CAhBsB,CAAzByD;AAkBA,MAAMQ,IAAI,GAAGlD,WAAW,CACpB,oBAAQ;AACJ,QAAI,CAACV,MAAL,EAAa,OAAO,CAAP,CADT,CACS;AAGb;;AACA,QAAMmE,MAAM,GAAGnE,MAAM,CAAC4D,IAAP5D,CAAYN,QAAZM,CAAf;AACA,QAAMoE,UAAU,GAAGD,MAAM,CAACP,IAAPO,EAAnB;AACAxE,eAAW,CAACyE,UAAD,CAAXzE;AACA,WAAOyE,UAAP;AATgB,KAWpB,CAACpE,MAAD,EAASL,WAAT,CAXoB,CAAxB;AAcA,MAAM0E,eAAe,GAAG7D,OAAO,CAAC;AAC5B,WAAQd,QAAQ,GAAGlB,QAAXkB,GAAuB,GAAvBA,IAA8B,CAAtC;AAD2B,KAE5B,CAAClB,QAAD,EAAWkB,QAAX,CAF4B,CAA/B;AAIA,SAAO;AAAEA,YAAQ,EAARA,QAAF;AAAYlB,YAAQ,EAARA,QAAZ;AAAsBoF,QAAI,EAAJA,IAAtB;AAA4BS,mBAAe,EAAfA;AAA5B,GAAP;AAhEG","names":["Actions","initialState","loading","playing","stopped","ended","error","duration","ready","reducer","state","action","type","START_LOAD","ON_LOAD","ON_PLAY","ON_STOP","ON_END","ON_PAUSE","ON_PLAY_ERROR","ON_LOAD_ERROR","playerContext","React","createContext","positionContext","position","setPosition","AudioPlayerProvider","children","value","useState","player","setPlayer","useReducer","dispatch","playerRef","useRef","prevPlayer","positionContextValue","useMemo","constructHowl","useCallback","audioProps","Howl","load","src","autoplay","_ref2$autoplay","html5","_ref2$html","rest","wasPlaying","current","_src","prevSrc","Array","isArray","once","unload","stop","off","undefined","howl","_state","on","_id","Error","useEffect","contextValue","Provider","noop","useAudioPlayer","options","useContext","restOptions","togglePlayPause","pause","play","boundHowlerMethods","bind","mute","volume","fade","useIsomorphicLayoutEffect","window","useLayoutEffect","useAudioPosition","config","highRefreshRate","_config$highRefreshRa","animationFrameRef","seek","timeout","setInterval","clearTimeout","animate","requestAnimationFrame","cancelAnimationFrame","result","updatedPos","percentComplete"],"sources":["/Users/patocskaierik/Desktop/The One Thing/new/the_one_thing/node_modules/react-use-audio-player/src/audioPlayerState.ts","/Users/patocskaierik/Desktop/The One Thing/new/the_one_thing/node_modules/react-use-audio-player/src/context.ts","/Users/patocskaierik/Desktop/The One Thing/new/the_one_thing/node_modules/react-use-audio-player/src/AudioPlayerProvider.tsx","/Users/patocskaierik/Desktop/The One Thing/new/the_one_thing/node_modules/react-use-audio-player/src/useAudioPlayer.ts","/Users/patocskaierik/Desktop/The One Thing/new/the_one_thing/node_modules/react-use-audio-player/src/useIsomorphicLayout.tsx","/Users/patocskaierik/Desktop/The One Thing/new/the_one_thing/node_modules/react-use-audio-player/src/useAudioPosition.ts"],"sourcesContent":["export enum Actions {\n    START_LOAD,\n    ON_LOAD,\n    ON_PLAY,\n    ON_END,\n    ON_PAUSE,\n    ON_STOP,\n    ON_PLAY_ERROR,\n    ON_LOAD_ERROR\n}\n\ninterface BaseAction {\n    type: Actions\n}\n\ninterface ErrorAction extends BaseAction {\n    error: Error\n}\n\ninterface LoadAction extends BaseAction {\n    duration: number\n}\n\ntype Action = BaseAction | ErrorAction | LoadAction\n\nexport interface AudioPlayerState {\n    loading: boolean\n    playing: boolean\n    stopped: boolean\n    error: Error | null\n    duration: number\n    ready: boolean\n    ended: boolean\n}\n\nexport const initialState: AudioPlayerState = {\n    loading: true,\n    playing: false,\n    stopped: true,\n    ended: false,\n    error: null,\n    duration: 0,\n    ready: false\n}\n\nexport function reducer(state: AudioPlayerState, action: Action) {\n    switch (action.type) {\n        case Actions.START_LOAD:\n            return {\n                ...state,\n                loading: true,\n                stopped: true,\n                ready: false,\n                error: null,\n                duration: 0\n            }\n        case Actions.ON_LOAD:\n            return {\n                ...state,\n                loading: false,\n                duration: (action as LoadAction).duration,\n                ended: false,\n                ready: true\n            }\n        case Actions.ON_PLAY:\n            return {\n                ...state,\n                playing: true,\n                ended: false,\n                stopped: false\n            }\n        case Actions.ON_STOP:\n            return {\n                ...state,\n                stopped: true,\n                playing: false\n            }\n        case Actions.ON_END:\n            return {\n                ...state,\n                stopped: true,\n                playing: false,\n                ended: true\n            }\n        case Actions.ON_PAUSE:\n            return {\n                ...state,\n                playing: false\n            }\n        case Actions.ON_PLAY_ERROR:\n            return {\n                ...state,\n                playing: false,\n                stopped: true,\n                error: (action as ErrorAction).error\n            }\n        case Actions.ON_LOAD_ERROR:\n            return {\n                ...state,\n                playing: false,\n                stopped: true,\n                loading: false,\n                error: (action as ErrorAction).error\n            }\n        default:\n            return state\n    }\n}\n","import React from \"react\"\nimport { AudioPlayerContext, AudioPlayerPositionContext } from \"./types\"\n\nexport const playerContext = React.createContext<AudioPlayerContext | null>(\n    null\n)\n\nexport const positionContext = React.createContext<AudioPlayerPositionContext>({\n    position: 0,\n    setPosition: () => {}\n})\n","import React, {\n    useState,\n    useCallback,\n    useEffect,\n    useRef,\n    useReducer,\n    useMemo\n} from \"react\"\nimport { Howl, HowlOptions } from \"howler\"\nimport { initialState, reducer, Actions } from \"./audioPlayerState\"\nimport { playerContext, positionContext } from \"./context\"\nimport { AudioPlayerContext } from \"./types\"\n\nexport interface AudioPlayerProviderProps {\n    children: React.ReactNode\n    value?: AudioPlayerContext\n}\n\nexport function AudioPlayerProvider({\n    children,\n    value\n}: AudioPlayerProviderProps) {\n    const [player, setPlayer] = useState<Howl | null>(null)\n    const [\n        { loading, error, playing, stopped, duration, ready, ended },\n        dispatch\n    ] = useReducer(reducer, initialState)\n\n    const playerRef = useRef<Howl>()\n    const prevPlayer = useRef<Howl>()\n\n    const [position, setPosition] = useState(0)\n    const positionContextValue = useMemo(\n        () => ({\n            position,\n            setPosition\n        }),\n        [position, setPosition]\n    )\n\n    const constructHowl = useCallback((audioProps: HowlOptions): Howl => {\n        return new Howl(audioProps)\n    }, [])\n\n    const load = useCallback(\n        ({ src, autoplay = false, html5 = false, ...rest }: HowlOptions) => {\n            let wasPlaying = false\n            if (playerRef.current) {\n                // don't do anything if we're asked to reload the same source\n                // @ts-ignore the _src argument actually exists\n                const { _src } = playerRef.current\n                // internal Howl _src property is sometimes an array and other times a single string\n                // still need to to do more research on why this is\n                const prevSrc = Array.isArray(_src) ? _src[0] : _src\n                if (prevSrc === src) return\n\n                // if the previous sound is still loading then destroy it as soon as it finishes\n                if (loading) {\n                    prevPlayer.current = playerRef.current\n                    prevPlayer.current.once(\"load\", () => {\n                        prevPlayer.current?.unload()\n                    })\n                }\n\n                wasPlaying = playerRef.current.playing()\n                if (wasPlaying) {\n                    playerRef.current.stop()\n                    // remove event handlers from player that is about to be replaced\n                    playerRef.current.off()\n                    playerRef.current = undefined\n                }\n            }\n\n            // signal that the loading process has begun\n            dispatch({ type: Actions.START_LOAD })\n\n            // create a new player\n            const howl = constructHowl({\n                src,\n                autoplay: wasPlaying || autoplay, // continues playing next song\n                html5,\n                ...rest\n            })\n\n            // if this howl has already been loaded (cached) then fire the load action\n            // @ts-ignore _state exists\n            if (howl._state === \"loaded\") {\n                dispatch({ type: Actions.ON_LOAD, duration: howl.duration() })\n            }\n\n            howl.on(\n                \"load\",\n                () =>\n                    void dispatch({\n                        type: Actions.ON_LOAD,\n                        duration: howl.duration()\n                    })\n            )\n            howl.on(\"play\", () => void dispatch({ type: Actions.ON_PLAY }))\n            howl.on(\"end\", () => void dispatch({ type: Actions.ON_END }))\n            howl.on(\"pause\", () => void dispatch({ type: Actions.ON_PAUSE }))\n            howl.on(\"stop\", () => void dispatch({ type: Actions.ON_STOP }))\n            howl.on(\"playerror\", (_id, error) => {\n                dispatch({\n                    type: Actions.ON_PLAY_ERROR,\n                    error: new Error(\"[Play error] \" + error)\n                })\n            })\n            howl.on(\"loaderror\", (_id, error) => {\n                dispatch({\n                    type: Actions.ON_LOAD_ERROR,\n                    error: new Error(\"[Load error] \" + error)\n                })\n            })\n\n            setPlayer(howl)\n            playerRef.current = howl\n        },\n        [constructHowl, loading]\n    )\n\n    useEffect(() => {\n        // unload the player on unmount\n        return () => {\n            if (playerRef.current) playerRef.current.unload()\n        }\n    }, [])\n\n    const contextValue: AudioPlayerContext = useMemo(() => {\n        return value\n            ? value\n            : {\n                  player,\n                  load,\n                  error,\n                  loading,\n                  playing,\n                  stopped,\n                  ready,\n                  duration,\n                  ended\n              }\n    }, [\n        loading,\n        error,\n        playing,\n        stopped,\n        load,\n        value,\n        player,\n        ready,\n        duration,\n        ended\n    ])\n\n    return (\n        <playerContext.Provider value={contextValue}>\n            <positionContext.Provider value={positionContextValue}>\n                {children}\n            </positionContext.Provider>\n        </playerContext.Provider>\n    )\n}\n","import { useCallback, useContext, useEffect, useMemo } from \"react\"\nimport { Howl, HowlOptions } from \"howler\"\nimport { playerContext } from \"./context\"\nimport { AudioPlayerContext } from \"./types\"\n\nconst noop = () => {}\n\nexport type AudioPlayerControls = AudioPlayerContext & {\n    play: Howl[\"play\"] | typeof noop\n    pause: Howl[\"pause\"] | typeof noop\n    stop: Howl[\"stop\"] | typeof noop\n    mute: Howl[\"mute\"] | typeof noop\n    volume: Howl[\"volume\"] | typeof noop\n    fade: Howl[\"fade\"] | typeof noop\n    togglePlayPause: () => void\n}\n\nexport const useAudioPlayer = (options?: HowlOptions): AudioPlayerControls => {\n    const { player, load, ...rest } = useContext(playerContext)!\n\n    useEffect(() => {\n        const { src, ...restOptions } = options || {}\n        // if useAudioPlayer is called without arguments\n        // don't do anything: the user will have access\n        // to the current context\n        if (!src) return\n        // todo: could improve perf even more by not calling load if the options haven't really changed across renders of the calling component\n        load({ src, ...restOptions })\n    }, [options, load])\n\n    const togglePlayPause = useCallback(() => {\n        if (!player) return\n\n        if (player.playing()) {\n            player.pause()\n        } else {\n            player.play()\n        }\n    }, [player])\n\n    const boundHowlerMethods = useMemo(() => {\n        return {\n            play: player ? player.play.bind(player) : noop,\n            pause: player ? player.pause.bind(player) : noop,\n            stop: player ? player.stop.bind(player) : noop,\n            mute: player ? player.mute.bind(player) : noop,\n            volume: player ? player.volume.bind(player) : noop,\n            fade: player ? player.fade.bind(player) : noop\n        }\n    }, [player])\n\n    return useMemo(() => {\n        return {\n            ...rest,\n            ...boundHowlerMethods,\n            player,\n            load,\n            togglePlayPause\n        }\n    }, [rest, player, boundHowlerMethods, load, togglePlayPause])\n}\n","import { useEffect, useLayoutEffect } from \"react\"\n\n/**\n * Abstraction for useLayoutEffect.\n *\n * It will use useLayoutEffect() on the client, but while rendering on the server it will use\n * useEffect() to avoid ssr servers warnings like \"useLayoutEffect does nothing on the server\".\n */\nconst useIsomorphicLayoutEffect =\n    typeof window !== \"undefined\" ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import { useCallback, useContext, useEffect, useMemo, useRef } from \"react\"\nimport { playerContext, positionContext } from \"./context\"\nimport { Howl } from \"howler\"\nimport useIsomorphicLayoutEffect from \"./useIsomorphicLayout\"\n\ninterface UseAudioPositionConfig {\n    highRefreshRate?: boolean\n}\n\ninterface AudioPosition {\n    position: number\n    duration: number\n    percentComplete: number\n    seek: (position: number) => number\n}\n\n// gives current audio position state - updates in an animation frame loop for animating audio visualizations\nexport const useAudioPosition = (\n    config: UseAudioPositionConfig = {}\n): AudioPosition => {\n    const { highRefreshRate = false } = config\n    const { player, playing, stopped, duration } = useContext(playerContext)!\n    const { position, setPosition } = useContext(positionContext)\n\n    const animationFrameRef = useRef<number>()\n\n    // sets position on player initialization and when the audio is stopped\n    useEffect(() => {\n        if (player) {\n            setPosition(player.seek() as number)\n        }\n    }, [player, setPosition, stopped])\n\n    // updates position on a one second loop for low refresh rate default setting\n    useEffect(() => {\n        let timeout: number\n        if (!highRefreshRate && player && playing)\n            timeout = window.setInterval(\n                () => setPosition(player.seek() as number),\n                1000\n            )\n        return () => clearTimeout(timeout)\n    }, [highRefreshRate, player, playing, setPosition])\n\n    // updates position on a 60fps loop for high refresh rate setting\n    useIsomorphicLayoutEffect(() => {\n        const animate = () => {\n            setPosition(player?.seek() as number)\n            animationFrameRef.current = requestAnimationFrame(animate)\n        }\n\n        // kick off a new animation cycle when the player is defined and starts playing\n        if (highRefreshRate && player && playing) {\n            animationFrameRef.current = requestAnimationFrame(animate)\n        }\n\n        return () => {\n            if (animationFrameRef.current) {\n                cancelAnimationFrame(animationFrameRef.current)\n            }\n        }\n    }, [highRefreshRate, player, playing, setPosition])\n\n    const seek = useCallback(\n        position => {\n            if (!player) return 0\n\n            // it appears that howler returns the Howl object when seek is given a position\n            // to get the latest potion you must call seek again with no parameters\n            const result = player.seek(position) as Howl\n            const updatedPos = result.seek() as number\n            setPosition(updatedPos)\n            return updatedPos\n        },\n        [player, setPosition]\n    )\n\n    const percentComplete = useMemo(() => {\n        return (position / duration) * 100 || 0\n    }, [duration, position])\n\n    return { position, duration, seek, percentComplete }\n}\n"]},"metadata":{},"sourceType":"module"}